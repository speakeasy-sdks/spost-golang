// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type EmailRouterSendEmailRequest struct {
	// The Email Message
	RequestBody []byte `request:"mediaType=*/*"`
	// Sub-Account API Key
	XSubAccountAPIKey string `header:"style=simple,explode=false,name=X-SubAccount-ApiKey"`
	// Mock email header
	XSendPostMockEmail *bool `header:"style=simple,explode=false,name=X-SendPost-Mock-Email"`
	// Mock email time shift
	XSendPostMockTimeShift *string `header:"style=simple,explode=false,name=X-SendPost-Mock-Time-Shift"`
}

func (o *EmailRouterSendEmailRequest) GetRequestBody() []byte {
	if o == nil {
		return []byte{}
	}
	return o.RequestBody
}

func (o *EmailRouterSendEmailRequest) GetXSubAccountAPIKey() string {
	if o == nil {
		return ""
	}
	return o.XSubAccountAPIKey
}

func (o *EmailRouterSendEmailRequest) GetXSendPostMockEmail() *bool {
	if o == nil {
		return nil
	}
	return o.XSendPostMockEmail
}

func (o *EmailRouterSendEmailRequest) GetXSendPostMockTimeShift() *string {
	if o == nil {
		return nil
	}
	return o.XSendPostMockTimeShift
}

type EmailRouterSendEmailResponse struct {
	Body []byte
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *EmailRouterSendEmailResponse) GetBody() []byte {
	if o == nil {
		return nil
	}
	return o.Body
}

func (o *EmailRouterSendEmailResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *EmailRouterSendEmailResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *EmailRouterSendEmailResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
